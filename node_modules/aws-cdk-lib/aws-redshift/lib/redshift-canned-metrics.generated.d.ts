export declare class RedshiftMetrics {
    static cpuUtilizationAverage(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static percentageDiskSpaceUsedAverage(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static databaseConnectionsAverage(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static healthStatusSum(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static maintenanceModeSum(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static networkReceiveThroughputSum(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static networkTransmitThroughputSum(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static queriesCompletedPerSecondSum(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static queryDurationAverage(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static queryRuntimeBreakdownSum(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static readIopsSum(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static readLatencyAverage(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static readThroughputSum(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static wlmQueriesCompletedPerSecondAverage(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static wlmQueryDurationAverage(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static wlmQueueLengthSum(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static writeIopsSum(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static writeLatencyAverage(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
    static writeThroughputSum(dimensions: {
        ClusterIdentifier: string;
    }): {
        namespace: string;
        metricName: string;
        dimensionsMap: {
            ClusterIdentifier: string;
        };
        statistic: string;
    };
}
