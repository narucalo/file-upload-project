"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ec2Action = exports.Ec2InstanceAction = void 0;
const jsiiDeprecationWarnings = require("../../.warnings.jsii.js");
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const core_1 = require("../../core");
/**
 * Types of EC2 actions available.
 *
 * @stability stable
 */
var Ec2InstanceAction;
(function (Ec2InstanceAction) {
    Ec2InstanceAction["STOP"] = "stop";
    Ec2InstanceAction["TERMINATE"] = "terminate";
    Ec2InstanceAction["RECOVER"] = "recover";
    Ec2InstanceAction["REBOOT"] = "reboot";
})(Ec2InstanceAction = exports.Ec2InstanceAction || (exports.Ec2InstanceAction = {}));
/**
 * Use an EC2 action as an Alarm action.
 *
 * @stability stable
 */
class Ec2Action {
    /**
     * @stability stable
     */
    constructor(instanceAction) {
        jsiiDeprecationWarnings.aws_cdk_lib_aws_cloudwatch_actions_Ec2InstanceAction(instanceAction);
        this.ec2Action = instanceAction;
    }
    /**
     * Returns an alarm action configuration to use an EC2 action as an alarm action.
     *
     * @stability stable
     */
    bind(_scope, _alarm) {
        jsiiDeprecationWarnings.aws_cdk_lib_aws_cloudwatch_IAlarm(_alarm);
        return { alarmActionArn: `arn:aws:automate:${core_1.Stack.of(_scope).region}:ec2:${this.ec2Action}` };
    }
}
exports.Ec2Action = Ec2Action;
_a = JSII_RTTI_SYMBOL_1;
Ec2Action[_a] = { fqn: "aws-cdk-lib.aws_cloudwatch_actions.Ec2Action", version: "2.0.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWMyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZWMyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLHFDQUFtQzs7Ozs7O0FBT25DLElBQVksaUJBU1g7QUFURCxXQUFZLGlCQUFpQjtJQUUzQixrQ0FBYSxDQUFBO0lBRWIsNENBQXVCLENBQUE7SUFFdkIsd0NBQW1CLENBQUE7SUFFbkIsc0NBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQVRXLGlCQUFpQixHQUFqQix5QkFBaUIsS0FBakIseUJBQWlCLFFBUzVCOzs7Ozs7QUFHRCxNQUFhLFNBQVM7Ozs7SUFHcEIsWUFBWSxjQUFpQzs7UUFDM0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxjQUFjLENBQUM7S0FDakM7Ozs7OztJQUdELElBQUksQ0FBQyxNQUFpQixFQUFFLE1BQXlCOztRQUMvQyxPQUFPLEVBQUUsY0FBYyxFQUFFLG9CQUFvQixZQUFLLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sUUFBUSxJQUFJLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQztLQUNoRzs7QUFWSCw4QkFXQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNsb3Vkd2F0Y2ggZnJvbSAnLi4vLi4vYXdzLWNsb3Vkd2F0Y2gnO1xuaW1wb3J0IHsgU3RhY2sgfSBmcm9tICcuLi8uLi9jb3JlJztcblxuLy8ga2VlcCB0aGlzIGltcG9ydCBzZXBhcmF0ZSBmcm9tIG90aGVyIGltcG9ydHMgdG8gcmVkdWNlIGNoYW5jZSBmb3IgbWVyZ2UgY29uZmxpY3RzIHdpdGggdjItbWFpblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWR1cGxpY2F0ZS1pbXBvcnRzLCBpbXBvcnQvb3JkZXJcbmltcG9ydCB7IENvbnN0cnVjdCB9IGZyb20gJ2NvbnN0cnVjdHMnO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuZXhwb3J0IGVudW0gRWMySW5zdGFuY2VBY3Rpb24ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICBTVE9QID0gJ3N0b3AnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgVEVSTUlOQVRFID0gJ3Rlcm1pbmF0ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIFJFQ09WRVIgPSAncmVjb3ZlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgUkVCT09UID0gJ3JlYm9vdCdcbn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbmV4cG9ydCBjbGFzcyBFYzJBY3Rpb24gaW1wbGVtZW50cyBjbG91ZHdhdGNoLklBbGFybUFjdGlvbiB7XG4gIHByaXZhdGUgZWMyQWN0aW9uOiBFYzJJbnN0YW5jZUFjdGlvbjtcblxuICBjb25zdHJ1Y3RvcihpbnN0YW5jZUFjdGlvbjogRWMySW5zdGFuY2VBY3Rpb24pIHtcbiAgICB0aGlzLmVjMkFjdGlvbiA9IGluc3RhbmNlQWN0aW9uO1xuICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgYmluZChfc2NvcGU6IENvbnN0cnVjdCwgX2FsYXJtOiBjbG91ZHdhdGNoLklBbGFybSk6IGNsb3Vkd2F0Y2guQWxhcm1BY3Rpb25Db25maWcge1xuICAgIHJldHVybiB7IGFsYXJtQWN0aW9uQXJuOiBgYXJuOmF3czphdXRvbWF0ZToke1N0YWNrLm9mKF9zY29wZSkucmVnaW9ufTplYzI6JHt0aGlzLmVjMkFjdGlvbn1gIH07XG4gIH1cbn1cblxuIl19