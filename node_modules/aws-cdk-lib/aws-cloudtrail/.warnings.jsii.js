function _aws_cdk_aws_cloudtrail_ReadWriteType(p) {
}
function _aws_cdk_aws_cloudtrail_ManagementEventSources(p) {
}
function _aws_cdk_aws_cloudtrail_DataResourceType(p) {
}
function _aws_cdk_aws_cloudtrail_S3EventSelector(p) {
}
function _aws_cdk_aws_cloudtrail_AddEventSelectorOptions(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.excludeManagementEventSources))
        _aws_cdk_aws_cloudtrail_ManagementEventSources(p.excludeManagementEventSources);
    if (!visitedObjects.has(p.readWriteType))
        _aws_cdk_aws_cloudtrail_ReadWriteType(p.readWriteType);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_cloudtrail_CfnTrailProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if (!visitedObjects.has(p.tags))
        require("@aws-cdk/core/.warnings.jsii.js")._aws_cdk_core_CfnTag(p.tags);
    visitedObjects.delete(p);
}
function _aws_cdk_aws_cloudtrail_Trail(p) {
}
function _aws_cdk_aws_cloudtrail_CfnTrail(p) {
}
function _aws_cdk_aws_cloudtrail_CfnTrail_InsightSelectorProperty(p) {
}
function _aws_cdk_aws_cloudtrail_CfnTrail_DataResourceProperty(p) {
}
function _aws_cdk_aws_cloudtrail_CfnTrail_EventSelectorProperty(p) {
}
function _aws_cdk_aws_cloudtrail_TrailProps(p) {
    if (p == null)
        return;
    visitedObjects.add(p);
    if ("kmsKey" in p)
        print("@aws-cdk/aws-cloudtrail.TrailProps#kmsKey", "- use encryptionKey instead.");
    if (!visitedObjects.has(p.managementEvents))
        _aws_cdk_aws_cloudtrail_ReadWriteType(p.managementEvents);
    visitedObjects.delete(p);
}
function print(name, deprecationMessage) {
    const deprecated = process.env.JSII_DEPRECATED;
    const deprecationMode = ["warn", "fail", "quiet"].includes(deprecated) ? deprecated : "warn";
    const message = `${name} is deprecated.\n  ${deprecationMessage}\n  This API will be removed in the next major release.`;
    switch (deprecationMode) {
        case "fail":
            throw new DeprecationError(message);
        case "warn":
            console.warn("[WARNING]", message);
            break;
    }
}
const visitedObjects = new Set();
class DeprecationError extends Error {
}
module.exports = { print, _aws_cdk_aws_cloudtrail_ReadWriteType, _aws_cdk_aws_cloudtrail_ManagementEventSources, _aws_cdk_aws_cloudtrail_DataResourceType, _aws_cdk_aws_cloudtrail_S3EventSelector, _aws_cdk_aws_cloudtrail_AddEventSelectorOptions, _aws_cdk_aws_cloudtrail_CfnTrailProps, _aws_cdk_aws_cloudtrail_Trail, _aws_cdk_aws_cloudtrail_CfnTrail, _aws_cdk_aws_cloudtrail_CfnTrail_InsightSelectorProperty, _aws_cdk_aws_cloudtrail_CfnTrail_DataResourceProperty, _aws_cdk_aws_cloudtrail_CfnTrail_EventSelectorProperty, _aws_cdk_aws_cloudtrail_TrailProps };
module.exports.DeprecationError = DeprecationError;
