"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Wave = void 0;
const jsiiDeprecationWarnings = require("../../../.warnings.jsii.js");
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const stage_deployment_1 = require("./stage-deployment");
/**
 * Multiple stages that are deployed in parallel.
 *
 * @stability stable
 */
class Wave {
    /**
     * @param id Identifier for this Wave.
     * @stability stable
     */
    constructor(
    /** Identifier for this Wave */
    id, props = {}) {
        var _b, _c;
        this.id = id;
        /**
         * The stages that are deployed in this wave.
         *
         * @stability stable
         */
        this.stages = [];
        jsiiDeprecationWarnings.aws_cdk_lib_pipelines_WaveProps(props);
        this.pre = (_b = props.pre) !== null && _b !== void 0 ? _b : [];
        this.post = (_c = props.post) !== null && _c !== void 0 ? _c : [];
    }
    /**
     * Add a Stage to this wave.
     *
     * It will be deployed in parallel with all other stages in this
     * wave.
     *
     * @stability stable
     */
    addStage(stage, options = {}) {
        jsiiDeprecationWarnings.aws_cdk_lib_Stage(stage);
        jsiiDeprecationWarnings.aws_cdk_lib_pipelines_AddStageOpts(options);
        const ret = stage_deployment_1.StageDeployment.fromStage(stage, options);
        this.stages.push(ret);
        return ret;
    }
    /**
     * Add an additional step to run before any of the stages in this wave.
     *
     * @stability stable
     */
    addPre(...steps) {
        jsiiDeprecationWarnings.aws_cdk_lib_pipelines_Step(steps);
        this.pre.push(...steps);
    }
    /**
     * Add an additional step to run after all of the stages in this wave.
     *
     * @stability stable
     */
    addPost(...steps) {
        jsiiDeprecationWarnings.aws_cdk_lib_pipelines_Step(steps);
        this.post.push(...steps);
    }
}
exports.Wave = Wave;
_a = JSII_RTTI_SYMBOL_1;
Wave[_a] = { fqn: "aws-cdk-lib.pipelines.Wave", version: "2.0.0" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2F2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndhdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EseURBQXFEOzs7Ozs7QUFhckQsTUFBYSxJQUFJOzs7OztJQVVmO0lBQ0UsK0JBQStCO0lBQ2YsRUFBVSxFQUFFLFFBQW1CLEVBQUU7O1FBQWpDLE9BQUUsR0FBRixFQUFFLENBQVE7Ozs7OztRQUpaLFdBQU0sR0FBc0IsRUFBRSxDQUFDOztRQUs3QyxJQUFJLENBQUMsR0FBRyxTQUFHLEtBQUssQ0FBQyxHQUFHLG1DQUFJLEVBQUUsQ0FBQztRQUMzQixJQUFJLENBQUMsSUFBSSxTQUFHLEtBQUssQ0FBQyxJQUFJLG1DQUFJLEVBQUUsQ0FBQztLQUM5Qjs7Ozs7Ozs7O0lBR00sUUFBUSxDQUFDLEtBQWdCLEVBQUUsVUFBd0IsRUFBRTs7O1FBQzFELE1BQU0sR0FBRyxHQUFHLGtDQUFlLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztRQUN0RCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QixPQUFPLEdBQUcsQ0FBQztLQUNaOzs7Ozs7SUFHTSxNQUFNLENBQUMsR0FBRyxLQUFhOztRQUM1QixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDO0tBQ3pCOzs7Ozs7SUFHTSxPQUFPLENBQUMsR0FBRyxLQUFhOztRQUM3QixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDO0tBQzFCOztBQWhDSCxvQkFpQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjZGsgZnJvbSAnLi4vLi4vLi4vY29yZSc7XG5pbXBvcnQgeyBTdGFnZURlcGxveW1lbnQgfSBmcm9tICcuL3N0YWdlLWRlcGxveW1lbnQnO1xuaW1wb3J0IHsgU3RhY2tTdGVwcywgU3RlcCB9IGZyb20gJy4vc3RlcCc7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5leHBvcnQgaW50ZXJmYWNlIFdhdmVQcm9wcyB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIHJlYWRvbmx5IHByZT86IFN0ZXBbXTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIHJlYWRvbmx5IHBvc3Q/OiBTdGVwW107XG59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5leHBvcnQgY2xhc3MgV2F2ZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICBwdWJsaWMgcmVhZG9ubHkgcHJlOiBTdGVwW107XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgcHVibGljIHJlYWRvbmx5IHBvc3Q6IFN0ZXBbXTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICBwdWJsaWMgcmVhZG9ubHkgc3RhZ2VzOiBTdGFnZURlcGxveW1lbnRbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIC8qKiBJZGVudGlmaWVyIGZvciB0aGlzIFdhdmUgKi9cbiAgICBwdWJsaWMgcmVhZG9ubHkgaWQ6IHN0cmluZywgcHJvcHM6IFdhdmVQcm9wcyA9IHt9KSB7XG4gICAgdGhpcy5wcmUgPSBwcm9wcy5wcmUgPz8gW107XG4gICAgdGhpcy5wb3N0ID0gcHJvcHMucG9zdCA/PyBbXTtcbiAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIHB1YmxpYyBhZGRTdGFnZShzdGFnZTogY2RrLlN0YWdlLCBvcHRpb25zOiBBZGRTdGFnZU9wdHMgPSB7fSkge1xuICAgIGNvbnN0IHJldCA9IFN0YWdlRGVwbG95bWVudC5mcm9tU3RhZ2Uoc3RhZ2UsIG9wdGlvbnMpO1xuICAgIHRoaXMuc3RhZ2VzLnB1c2gocmV0KTtcbiAgICByZXR1cm4gcmV0O1xuICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICBwdWJsaWMgYWRkUHJlKC4uLnN0ZXBzOiBTdGVwW10pIHtcbiAgICB0aGlzLnByZS5wdXNoKC4uLnN0ZXBzKTtcbiAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICBwdWJsaWMgYWRkUG9zdCguLi5zdGVwczogU3RlcFtdKSB7XG4gICAgdGhpcy5wb3N0LnB1c2goLi4uc3RlcHMpO1xuICB9XG59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbmV4cG9ydCBpbnRlcmZhY2UgQWRkU3RhZ2VPcHRzIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIHJlYWRvbmx5IHByZT86IFN0ZXBbXTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICByZWFkb25seSBwb3N0PzogU3RlcFtdO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgcmVhZG9ubHkgc3RhY2tTdGVwcz86IFN0YWNrU3RlcHNbXTtcbn1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5leHBvcnQgaW50ZXJmYWNlIFdhdmVPcHRpb25zIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgcmVhZG9ubHkgcHJlPzogU3RlcFtdO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgcmVhZG9ubHkgcG9zdD86IFN0ZXBbXTtcbn0iXX0=